% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation.R
\name{system_transition}
\alias{system_transition}
\title{Simulate the transition of states and policies in a dynamic system}
\usage{
system_transition(env, transit, pi, varphidx, init_s = NULL)
}
\arguments{
\item{env}{A list containing environment parameters such as time horizon \code{tau}, number of states \code{nI}, \code{nJ}, state keys, action support, state support, and scenario indices.}

\item{transit}{A matrix representing the state transition probabilities and associated costs for each action.}

\item{pi}{A matrix representing the policy probabilities for each state-action pair over time.}

\item{varphidx}{A vector of scenario indices representing different possible outcomes at each time step.}

\item{init_s}{An optional initial state vector. If \code{NULL}, the initial state is assumed to be zero.}
}
\value{
A list containing the following elements:
\describe{
\item{S.I}{A matrix representing the states of type I over time.}
\item{S.J}{A matrix representing the states of type J over time.}
\item{X.I}{A matrix representing the differences in states of type I between time steps.}
\item{X.J}{A matrix representing the differences in states of type J between time steps.}
\item{cost}{The total cost incurred over the time horizon.}
}
}
\description{
The \code{system_transition} function simulates the transitions of states in a dynamic system based on given policies, transition probabilities, and initial states. The function calculates the system's state transitions, the resulting actions, and the associated costs over a specified time horizon.
}
\details{
The function iteratively updates the state matrices \code{S.I} and \code{S.J} based on the given transition probabilities and policies. It computes the costs at each time step and accumulates them to return the total cost.
}
